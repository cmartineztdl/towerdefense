!function(e){function n(r){if(o[r])return o[r].exports;var t=o[r]={exports:{},id:r,loaded:!1};return e[r].call(t.exports,t,t.exports,n),t.loaded=!0,t.exports}var o={};return n.m=e,n.c=o,n.p="",n(0)}([function(e,n,o){function r(){function e(){r.rotation.x+=.05,r.rotation.y+=.03,c.rotation.x+=.05,c.rotation.y+=.03,requestAnimationFrame(e),x.render(a,s)}a=new THREE.Scene,p=window.innerHeight,u=window.innerWidth,d=u/p,s=new THREE.PerspectiveCamera(l,d,E,w),s.position.z=5,x=new THREE.WebGLRenderer({antialias:!0,precision:"mediump"}),x.setClearColor(15459815,1),x.setSize(u,p),x.shadowMap.enabled=!0,document.body.appendChild(x.domElement);var n=new THREE.BoxGeometry(1,1,1),o=new THREE.MeshPhongMaterial({color:16724736,specular:5592405,shininess:30}),r=new THREE.Mesh(n,o);a.add(r),r.position.x=1;var i=new THREE.MeshPhongMaterial({map:THREE.ImageUtils.loadTexture("textures/ground.jpg")}),c=new THREE.Mesh(n,i);a.add(c),c.position.x=-1;var h=new THREE.DirectionalLight(16777215,.5);h.position.set(10,10,10),a.add(h),window.addEventListener("resize",t,!1),controls=new THREE.OrbitControls(s,x.domElement),e()}function t(){p=window.innerHeight,u=window.innerWidth,x.setSize(u,p),s.aspect=u/p,s.updateProjectionMatrix()}var i=(o(2),o(3));console.log(i());var a,s,d,x,p,u,l=75,E=1,w=2e3;r()},,function(e,n){e.exports={folders:{textures:"textures/"}}},function(e,n){e.exports=function(e,n,o){if(e=e||5,n=n||5,o=o||.2,0>e||0>n||o>.3)throw new Error("Invalid size for map");var r=[],t=Math.round(Math.random()*(e-3)),i=[];for(x=0;x<e;x++)i[x]=x==t+1?"Home":"Imposible";for(r.push(i),y=0;y<n;y++){var i=[];for(x=0;x<e;x++)i[x]=Math.random()<=o?"Obstacle":"Ground";r.push(i)}var a=Math.round(Math.random()*(e-3)),i=[];for(x=0;x<e;x++)i[x]=x==a+1?"Spawn":"Imposible";return r.push(i),r}}]);
//# sourceMappingURL=bundle.min.js.map