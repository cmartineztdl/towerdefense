{"version":3,"sources":["webpack:///www/bundle.min.js","webpack:///webpack/bootstrap 1da117ce44493219655f","webpack:///./src/main.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","init","render","cube","rotation","x","y","requestAnimationFrame","renderer","scene","camera","THREE","Scene","HEIGHT","window","innerHeight","WIDTH","innerWidth","aspectRatio","PerspectiveCamera","fieldOfView","nearPlane","farPlane","WebGLRenderer","antialias","precision","setClearColor","setSize","shadowMap","enabled","document","body","appendChild","domElement","geometry","BoxGeometry","material","MeshPhongMaterial","color","specular","shininess","Mesh","add","position","z","directionalLight","DirectionalLight","set","addEventListener","onWindowResize","controls","OrbitControls","aspect","updateProjectionMatrix"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,GE9BvB,QAAAQ,KAuCA,QAAAC,KACAC,EAAAC,SAAAC,GAAA,IACAF,EAAAC,SAAAE,GAAA,IAEAC,sBAAAL,GACAM,EAAAN,OAAAO,EAAAC,GA3CAD,EAAA,GAAAE,OAAAC,MAEAC,EAAAC,OAAAC,YACAC,EAAAF,OAAAG,WACAC,EAAAF,EAAAH,EAEAH,EAAA,GAAAC,OAAAQ,kBAAAC,EAAAF,EAAAG,EAAAC,GAEAd,EAAA,GAAAG,OAAAY,eACAC,WAAA,EACAC,UAAA,YAEAjB,EAAAkB,cAAA,YACAlB,EAAAmB,QAAAX,EAAAH,GACAL,EAAAoB,UAAAC,SAAA,EAEAC,SAAAC,KAAAC,YAAAxB,EAAAyB,WAIA,IAAAC,GAAA,GAAAvB,OAAAwB,YAAA,OACAC,EAAA,GAAAzB,OAAA0B,mBACAC,MAAA,SACAC,SAAA,QACAC,UAAA,KAEArC,EAAA,GAAAQ,OAAA8B,KAAAP,EAAAE,EACA3B,GAAAiC,IAAAvC,GACAO,EAAAiC,SAAAC,EAAA,CAEA,IAAAC,GAAA,GAAAlC,OAAAmC,iBAAA,YACAD,GAAAF,SAAAI,IAAA,UACAtC,EAAAiC,IAAAG,GAEA/B,OAAAkC,iBAAA,SAAAC,GAAA,GAEAC,SAAA,GAAAvC,OAAAwC,cAAAzC,EAAAF,EAAAyB,YASA/B,IAGA,QAAA+C,KACApC,EAAAC,OAAAC,YACAC,EAAAF,OAAAG,WACAT,EAAAmB,QAAAX,EAAAH,GACAH,EAAA0C,OAAApC,EAAAH,EACAH,EAAA2C,yBAnEA,GAAA5C,GACAC,EAEAQ,EAGAV,EAGAK,EACAG,EARAI,EAAA,GAEAC,EAAA,EACAC,EAAA,GAiEArB","file":"./www/bundle.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t//THREEJS RELATED VARIABLES \r\n\tvar scene; \r\n\tvar camera;\r\n\tvar fieldOfView = 75;\r\n\tvar aspectRatio;\r\n\tvar nearPlane = 1;\r\n\tvar farPlane = 2000;\r\n\tvar renderer;\r\n\t\r\n\t//SCREEN VARIABLES\r\n\tvar HEIGHT;\r\n\tvar WIDTH;\r\n\t\r\n\t//INIT THREE JS AND SCREEN\r\n\tfunction init(){\r\n\t\tscene = new THREE.Scene();\r\n\t\t\r\n\t\tHEIGHT = window.innerHeight;\r\n\t\tWIDTH = window.innerWidth;\r\n\t\taspectRatio = WIDTH / HEIGHT;\r\n\t\r\n\t\tcamera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\r\n\t\t\r\n\t\trenderer = new THREE.WebGLRenderer({\r\n\t\t\tantialias: true,\r\n\t\t\tprecision: \"mediump\"\r\n\t\t});\r\n\t\trenderer.setClearColor( 0xebe5e7, 1 );\r\n\t\trenderer.setSize(WIDTH, HEIGHT);\r\n\t\trenderer.shadowMap.enabled = true;\r\n\t\t\r\n\t\tdocument.body.appendChild(renderer.domElement);\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tvar geometry = new THREE.BoxGeometry(1, 1, 1);\r\n\t\tvar material = new THREE.MeshPhongMaterial({\r\n\t\t\tcolor: 0xff3300,\r\n\t\t\tspecular: 0x555555,\r\n\t\t\tshininess: 30\r\n\t\t});\r\n\t\tvar cube = new THREE.Mesh(geometry, material);\r\n\t\tscene.add(cube);\r\n\t\tcamera.position.z = 5;\r\n\t\r\n\t\tvar directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\r\n\t\tdirectionalLight.position.set(10, 10, 10);\r\n\t\tscene.add(directionalLight);\r\n\t\r\n\t\twindow.addEventListener('resize', onWindowResize, false);\r\n\t\r\n\t\tcontrols = new THREE.OrbitControls(camera, renderer.domElement);\r\n\t\r\n\t\tfunction render() {\r\n\t\t\tcube.rotation.x += 0.05;\r\n\t\t\tcube.rotation.y += 0.03;\r\n\t\r\n\t\t\trequestAnimationFrame(render);\r\n\t\t\trenderer.render(scene, camera);\r\n\t\t}\r\n\t\trender();\r\n\t}\r\n\t\r\n\tfunction onWindowResize() {\r\n\t\tHEIGHT = window.innerHeight;\r\n\t\tWIDTH = window.innerWidth;\r\n\t\trenderer.setSize(WIDTH, HEIGHT);\r\n\t\tcamera.aspect = WIDTH / HEIGHT;\r\n\t\tcamera.updateProjectionMatrix();\r\n\t}\r\n\t\r\n\tinit();\r\n\t\r\n\t/*\r\n\tvar scene = new THREE.Scene();\r\n\tvar camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n\tvar renderer = new THREE.WebGLRenderer({\r\n\t\tantialias: true,\r\n\t\tprecision: \"mediump\"\r\n\t});\r\n\t\r\n\tdocument.body.appendChild(renderer.domElement);\r\n\t\r\n\twindow.addEventListener('resize', onWindowResize, false);\r\n\tfunction onWindowResize() {\r\n\t\tHEIGHT = window.innerHeight;\r\n\t\tWIDTH = window.innerWidth;\r\n\t\twindowHalfX = WIDTH / 2;\r\n\t\twindowHalfY = HEIGHT / 2;\r\n\t\trenderer.setSize(WIDTH, HEIGHT);\r\n\t\tcamera.aspect = WIDTH / HEIGHT;\r\n\t\tcamera.updateProjectionMatrix();\r\n\t}\r\n\t\r\n\tvar geometry = new THREE.BoxGeometry(1, 1, 1);\r\n\tvar material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n\tvar cube = new THREE.Mesh(geometry, material);\r\n\tscene.add(cube);\r\n\tcamera.position.z = 5;\r\n\t\r\n\tfunction render() {\r\n\t\tcube.rotation.x += 0.1;\r\n\t\tcube.rotation.y += 0.1;\r\n\t\r\n\t\trequestAnimationFrame(render);\r\n\t\trenderer.render(scene, camera);\r\n\t}\r\n\trender();\r\n\t*/\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** www/bundle.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1da117ce44493219655f\n **/","//THREEJS RELATED VARIABLES \r\nvar scene; \r\nvar camera;\r\nvar fieldOfView = 75;\r\nvar aspectRatio;\r\nvar nearPlane = 1;\r\nvar farPlane = 2000;\r\nvar renderer;\r\n\r\n//SCREEN VARIABLES\r\nvar HEIGHT;\r\nvar WIDTH;\r\n\r\n//INIT THREE JS AND SCREEN\r\nfunction init(){\r\n\tscene = new THREE.Scene();\r\n\t\r\n\tHEIGHT = window.innerHeight;\r\n\tWIDTH = window.innerWidth;\r\n\taspectRatio = WIDTH / HEIGHT;\r\n\r\n\tcamera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\r\n\t\r\n\trenderer = new THREE.WebGLRenderer({\r\n\t\tantialias: true,\r\n\t\tprecision: \"mediump\"\r\n\t});\r\n\trenderer.setClearColor( 0xebe5e7, 1 );\r\n\trenderer.setSize(WIDTH, HEIGHT);\r\n\trenderer.shadowMap.enabled = true;\r\n\t\r\n\tdocument.body.appendChild(renderer.domElement);\r\n\t\r\n\t\r\n\r\n\tvar geometry = new THREE.BoxGeometry(1, 1, 1);\r\n\tvar material = new THREE.MeshPhongMaterial({\r\n\t\tcolor: 0xff3300,\r\n\t\tspecular: 0x555555,\r\n\t\tshininess: 30\r\n\t});\r\n\tvar cube = new THREE.Mesh(geometry, material);\r\n\tscene.add(cube);\r\n\tcamera.position.z = 5;\r\n\r\n\tvar directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\r\n\tdirectionalLight.position.set(10, 10, 10);\r\n\tscene.add(directionalLight);\r\n\r\n\twindow.addEventListener('resize', onWindowResize, false);\r\n\r\n\tcontrols = new THREE.OrbitControls(camera, renderer.domElement);\r\n\r\n\tfunction render() {\r\n\t\tcube.rotation.x += 0.05;\r\n\t\tcube.rotation.y += 0.03;\r\n\r\n\t\trequestAnimationFrame(render);\r\n\t\trenderer.render(scene, camera);\r\n\t}\r\n\trender();\r\n}\r\n\r\nfunction onWindowResize() {\r\n\tHEIGHT = window.innerHeight;\r\n\tWIDTH = window.innerWidth;\r\n\trenderer.setSize(WIDTH, HEIGHT);\r\n\tcamera.aspect = WIDTH / HEIGHT;\r\n\tcamera.updateProjectionMatrix();\r\n}\r\n\r\ninit();\r\n\r\n/*\r\nvar scene = new THREE.Scene();\r\nvar camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\nvar renderer = new THREE.WebGLRenderer({\r\n\tantialias: true,\r\n\tprecision: \"mediump\"\r\n});\r\n\r\ndocument.body.appendChild(renderer.domElement);\r\n\r\nwindow.addEventListener('resize', onWindowResize, false);\r\nfunction onWindowResize() {\r\n\tHEIGHT = window.innerHeight;\r\n\tWIDTH = window.innerWidth;\r\n\twindowHalfX = WIDTH / 2;\r\n\twindowHalfY = HEIGHT / 2;\r\n\trenderer.setSize(WIDTH, HEIGHT);\r\n\tcamera.aspect = WIDTH / HEIGHT;\r\n\tcamera.updateProjectionMatrix();\r\n}\r\n\r\nvar geometry = new THREE.BoxGeometry(1, 1, 1);\r\nvar material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\nvar cube = new THREE.Mesh(geometry, material);\r\nscene.add(cube);\r\ncamera.position.z = 5;\r\n\r\nfunction render() {\r\n\tcube.rotation.x += 0.1;\r\n\tcube.rotation.y += 0.1;\r\n\r\n\trequestAnimationFrame(render);\r\n\trenderer.render(scene, camera);\r\n}\r\nrender();\r\n*/\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}